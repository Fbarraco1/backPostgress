generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categoria {
  id       Int       @id @default(autoincrement())
  activo   Boolean?
  nombre   String?
  Producto Producto[]
  Tipo     Tipo[]    // Campo inverso para la relaci√≥n con Tipo
}

model DetalleOrden {
  id          Int @id @default(autoincrement())
  activo      Boolean?
  cantidad    Int?
  orden_id    Int?
  producto_id Int?
  Orden       OrdenDeCompra? @relation(fields: [orden_id], references: [id])
  Producto    Producto?      @relation(fields: [producto_id], references: [id])
}

model Direccion {
  id        Int @id @default(autoincrement())
  activo    Boolean?
  calle     String?
  cp        String?
  localidad String?
  Usuario   UsuarioDireccion[]
}

model ImagenProducto {
  id           Int @id @default(autoincrement())
  activo       Boolean?
  es_principal Boolean?
  nombre       String?
  orden        Int?
  url          String?
  producto_id  Int?
  Producto     Producto? @relation(fields: [producto_id], references: [id])
}

model OrdenDeCompra {
  id            Int @id @default(autoincrement())
  activo        Boolean?
  fecha         DateTime?
  usuario_id    Int?
  Usuario       Usuario?        @relation(fields: [usuario_id], references: [id])
  DetalleOrden  DetalleOrden[]
}

model Producto {
  id             Int @id @default(autoincrement())
  activo         Boolean?
  cantidad       Int?
  color          String?
  descripcion    String?
  marca          String?
  nombre         String?
  precio         Float?
  categoria_id   Int?
  Categoria      Categoria?       @relation(fields: [categoria_id], references: [id])
  ImagenProducto ImagenProducto[]
  DetalleOrden   DetalleOrden[]
  TalleProducto  TalleProducto[]
}

model Talle {
  id            Int @id @default(autoincrement())
  activo        Boolean?
  tipo_talle    String?
  TalleProducto TalleProducto[]
}

model TalleProducto {
  id          Int @id @default(autoincrement())
  activo      Boolean?
  producto_id Int?
  talle_id    Int?
  Producto    Producto? @relation(fields: [producto_id], references: [id])
  Talle       Talle?    @relation(fields: [talle_id], references: [id])
}

model Tipo {
  id           Int        @id @default(autoincrement())
  activo       Boolean    @default(true)
  nombre       String
  idCategoria  Int
  Categoria    Categoria  @relation(fields: [idCategoria], references: [id])
}

enum RolUsuario {
  USER
  ADMIN
}

model Usuario {
  id               Int @id @default(autoincrement())
  activo           Boolean?
  contrasenia      String?
  email            String?
  nombre           String?
  rol              RolUsuario?
  OrdenDeCompra    OrdenDeCompra[]
  UsuarioDireccion UsuarioDireccion[]
}

model UsuarioDireccion {
  id           Int @id @default(autoincrement())
  activo       Boolean?
  direccion_id Int?
  usuario_id   Int?
  Direccion    Direccion? @relation(fields: [direccion_id], references: [id])
  Usuario      Usuario?   @relation(fields: [usuario_id], references: [id])
}
